<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DC NEXUS Database</title>
    <script src="https://cdn.tailwindcss.com"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Exo+2:wght@400;700&family=Roboto+Mono:wght@400;700&family=VT323&display=swap" rel="stylesheet">
    
    <style>
        :root {
            --primary-glow: #a3e635; 
            --secondary-glow: #4f46e5; 
            --text-color: #e5e7eb;
            --bg-color: #0a0a14; 
        }

        body {
            font-family: 'Exo 2', sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
        }
        body::-webkit-scrollbar {
    width: 9px;
    height: 6px;
}
body::-webkit-scrollbar-track {
    background: rgb(4, 1, 1);
}
body::-webkit-scrollbar-thumb {
    background-color: rgba(44, 62, 80, 0.8);
    border-radius: 10px;
}
body::-webkit-scrollbar-thumb:hover {
    background-color: rgba(90, 21, 21, 0.81);
}

        .cyberpunk-font {
            font-family: 'Roboto Mono', monospace;
        }
        .pixel-font {
            font-family: 'VT323', monospace;
        }
    
        .minimal-header {
            background: rgba(10, 10, 20, 0.5);
            backdrop-filter: blur(4px);
            border-bottom: 1px solid rgba(230, 198, 53, 0.26);
        }
        .header-title-neon {
            color: var(--primary-glow);
            text-shadow: 0 0 3px var(--primary-glow), 0 0 8px var(--secondary-glow);
        }

     
        #hero {
            background-image: url('https://images5.alphacoders.com/109/1097979.jpg');
            background-size: cover;
            background-position: center;
            position: relative;
            height: 100vh;
        }
        #hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(10, 10, 20, 0.7);
            backdrop-filter: blur(4px);
            z-index: 0;
        }
        .hero-content {
            position: relative;
            z-index: 1;
        }
        .hero-title {
            font-size: 4rem;
            font-weight: 700;
            letter-spacing: 0.1em;
            color: #fff;
            text-shadow: 0 0 8px var(--primary-glow), 0 0 15px var(--primary-glow), 0 0 25px var(--secondary-glow), 0 0 40px var(--secondary-glow);
            animation: pulse-glow 2.5s infinite alternate;
        }
        @keyframes pulse-glow {
            from { text-shadow: 0 0 5px var(--primary-glow), 0 0 10px var(--primary-glow), 0 0 15px var(--secondary-glow); }
            to { text-shadow: 0 0 10px var(--primary-glow), 0 0 20px var(--primary-glow), 0 0 30px var(--secondary-glow), 0 0 45px var(--secondary-glow); }
        }
        
      
        .glitch-text {
            position: relative;
        }
        .glitch-text::before, .glitch-text::after {
            content: attr(data-text);
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--bg-color);
            overflow: hidden;
        }
        .glitch-text::before {
            left: 2px;
            text-shadow: -2px 0 var(--secondary-glow);
            animation: glitch-anim-1 2.5s infinite linear alternate-reverse;
        }
        .glitch-text::after {
            left: -2px;
            text-shadow: 2px 0 var(--primary-glow);
            animation: glitch-anim-2 2.5s infinite linear alternate-reverse;
        }
        @keyframes glitch-anim-1 {
            0% { clip-path: inset(45% 0 35% 0); } 20% { clip-path: inset(25% 0 55% 0); } 40% { clip-path: inset(75% 0 5% 0); } 60% { clip-path: inset(15% 0 65% 0); } 80% { clip-path: inset(5% 0 75% 0); } 100% { clip-path: inset(95% 0 5% 0); }
        }
        @keyframes glitch-anim-2 {
            0% { clip-path: inset(65% 0 15% 0); } 20% { clip-path: inset(55% 0 25% 0); } 40% { clip-path: inset(5% 0 75% 0); } 60% { clip-path: inset(65% 0 15% 0); } 80% { clip-path: inset(25% 0 55% 0); } 100% { clip-path: inset(85% 0 5% 0); }
        }

     
        #animated-boundary {
            height: 3px;
            width: 100%;
            background: linear-gradient(90deg, transparent, var(--primary-glow), var(--secondary-glow), transparent);
            background-size: 200% 100%;
            animation: move-line 4s linear infinite;
        }
        @keyframes move-line {
            0% { background-position: -100% 0; }
            100% { background-position: 100% 0; }
        }

       
        .glass-matrix {
            background: rgba(79, 70, 229, 0.1); /* Indigo with low opacity */
            backdrop-filter: blur(12px) saturate(150%);
            -webkit-backdrop-filter: blur(12px) saturate(150%);
            border-radius: 12px;
            border: 1px solid rgba(163, 230, 53, 0.2); /* Lime border */
            box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
        }
        
        /* Movie Cards */
        .card-container {
            border: 2px solid var(--secondary-glow);
            box-shadow: 0 0 10px var(--secondary-glow), 0 0 15px var(--primary-glow);
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
            height: 550px;
            position: relative;
            overflow: hidden;
            background: var(--bg-color);
        }
        .card-container:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 10px 20px var(--secondary-glow), 0 0 30px var(--primary-glow);
        }
        .card-container img {
            filter: brightness(0.8) blur(0.3px);
        }
        .card-overlay {
            background: linear-gradient(to top, rgba(10, 10, 20, 0.95) 0%, rgba(10, 10, 20, 0) 100%);
        }
        
        /* Buttons */
        .filter-btn, .sort-btn, .pagination-btn, .trailer-btn {
            background: rgba(10, 10, 20, 0.5);
            border: 1px solid var(--secondary-glow);
            color: var(--text-color);
            box-shadow: 0 0 3px var(--secondary-glow);
            transition: all 0.2s ease-in-out;
        }
        .filter-btn:hover, .sort-btn:hover, .pagination-btn:hover, .trailer-btn:hover {
            background: var(--secondary-glow);
            color: #fff;
            box-shadow: 0 0 8px var(--secondary-glow), 0 0 15px var(--primary-glow);
        }
        .filter-btn.active, .sort-btn.active, .pagination-btn.active {
            background: var(--primary-glow);
            color: #000;
            border-color: var(--primary-glow);
            box-shadow: 0 0 8px var(--primary-glow), 0 0 15px var(--primary-glow);
        }
        .pagination-nav-btn {
            border: 1px solid var(--primary-glow);
        }
        .pagination-nav-btn:hover {
            background: var(--primary-glow);
            color: #000;
        }
        .trailer-btn {
            border-color: var(--primary-glow);
            font-family: 'VT323', monospace;
            text-shadow: none;
            padding: 8px 12px;
        }
        
        /* Data Boxes */
        .data-box {
            background: rgba(10, 10, 20, 0.4);
            border: 1px solid var(--secondary-glow);
            padding: 8px 12px;
            font-family: 'VT323', monospace;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .data-box-label {
            color: var(--secondary-glow);
            font-weight: bold;
        }
        .data-box-value {
            color: var(--primary-glow);
            font-size: 1.25rem;
            font-weight: bold;
        }
        .data-box.revenue-box {
            border-color: var(--primary-glow);
        }
        .data-box.revenue-box .data-box-label {
            color: var(--primary-glow);
        }
        .data-box.revenue-box .data-box-value {
            color: var(--secondary-glow);
        }
        .data-box-small {
            font-size: 0.875rem;
            padding: 6px 10px;
        }
        .data-box-small .data-box-value {
            font-size: 1rem;
        }

        /* Footer Styles */
        .footer-bg {
            background-image: url('https://images8.alphacoders.com/109/1099884.jpg');
            background-size: cover;
            background-position: center;
            position: relative;
        }
        .footer-bg::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(10, 10, 20, 0.85);
            backdrop-filter: blur(5px);
            z-index: 0;
        }
        footer {
            background-color: transparent;
            border-top: 2px solid var(--secondary-glow);
            box-shadow: 0 -5px 20px rgba(79, 70, 229, 0.3);
        }
        
        /* Modal Styles */
        .modal {
            position: fixed;
            z-index: 9999; /* Increased z-index to ensure it's on top of all elements */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(10, 10, 20, 0.7);
            backdrop-filter: blur(8px);
            display: none;
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background: var(--bg-color);
            border: 2px solid var(--primary-glow);
            box-shadow: 0 0 20px var(--primary-glow), 0 0 40px var(--secondary-glow);
            width: 80vw;  /* Increased from default */
            max-width: 1200px;  /* Added max-width */
        }
        .close-btn {
            color: var(--secondary-glow);
            text-shadow: 0 0 5px var(--secondary-glow);
        }
        .close-btn:hover {
            color: var(--primary-glow);
        }
        .video-container {
            position: relative;
            padding-bottom: 45%;
            height: 0;
            overflow: hidden;
            width: 100%;
        }
        @media (max-width: 768px) {
    .modal-content {
        width: 95vw;
    }
    .video-container {
        padding-bottom: 56.25%;  /* Revert to standard aspect on mobile */
    }
}
        .video-container iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
        .data-box-value-white {
    color: white !important;
}
/* Enhanced Rain effect styles */
#rain-canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10;
    mix-blend-mode: screen;
    opacity: 0.8;
}
.rain-toggle-btn {
    background: rgba(10, 10, 20, 0.5);
    border: 1px solid var(--primary-glow);
    color: var(--text-color);
    transition: all 0.3s ease;
}
.rain-toggle-btn:hover {
    background: var(--primary-glow);
    color: #000;
}
.rain-toggle-btn.matrix-mode {
    border-color: #0F0;
    color: #0F0;
}

    </style>
</head>
<body class="bg-black text-gray-100 min-h-screen">
    <!-- Minimal Header -->
    <header class="minimal-header fixed top-0 left-0 w-full z-50 flex items-center justify-between px-4 md:px-8 py-3">
        <div class="flex items-center space-x-4">
           <img 
    src="https://www.pngall.com/wp-content/uploads/13/DC-Logo-PNG.png" 
    alt="DC Logo" 
    class="h-8 md:h-10 mix-blend-screen"/>
            <h1 class="text-xl md:text-2xl font-bold header-title-neon pixel-font">AVP NEXUS</h1>
        </div>
        <!-- In your header section (around line 120) -->
<button id="rain-toggle" class="rain-toggle-btn px-3 py-1 rounded-lg ml-4 text-xs cyberpunk-font">
    RAIN: OFF
</button>
        <p class="hidden md:block text-sm text-gray-400 cyberpunk-font">DATABASE v3.0.1</p>
    </header>

    <!-- Hero Section -->
    <section id="hero" class="relative overflow-hidden flex flex-col justify-center items-center text-center pt-24">
        <div class="hero-content">
            <h1 class="hero-title glitch-text" data-text="DC NEXUS">AVP NEXUS</h1>
            <p class="text-xl md:text-2xl mt-4 cyberpunk-font">QUANTUM DATABASE MATRIX</p>
            <p class="text-sm md:text-md mt-2">COMPREHENSIVE AVP CINEMATIC UNIVERSE</p>
            <div class="flex items-center justify-center space-x-6 mt-8 text-xs md:text-sm cyberpunk-font">
                <div class="flex items-center space-x-1">
                    <span class="w-2 h-2 rounded-full bg-green-500 shadow-lg shadow-green-500/50 animate-pulse"></span>
                    <span>MATRIX ONLINE</span>
                </div>
                <div class="flex items-center space-x-1">
                    <span class="w-2 h-2 rounded-full bg-yellow-500 shadow-lg shadow-yellow-500/50 animate-pulse"></span>
                    <span>DATA SYNCHRONIZED</span>
                </div>
                <div class="flex items-center space-x-1">
                    <span class="w-2 h-2 rounded-full bg-red-500 shadow-lg shadow-red-500/50 animate-pulse"></span>
                    <span>QUANTUM READY</span>
                </div>
            </div>
        </div>
    </section>
    <canvas id="rain-canvas" class="fixed top-0 left-0 w-full h-full pointer-events-none z-10 mix-blend-screen opacity-80"></canvas>

    <!-- Animated Line Boundary -->
    <div id="animated-boundary"></div>

    <!-- Main Content -->
    <main class="container mx-auto p-4 md:p-8">
        <!-- Filter Section with Glassmorphism -->
        <section class="glass-matrix p-4 md:p-6 mb-8">
            <div class="flex flex-col md:flex-row items-center justify-between space-y-4 md:space-y-0">
                <div class="flex items-center space-x-4">
                    <svg class="h-6 w-6 text-lime-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"/>
                    </svg>
                    <h2 class="text-lg md:text-2xl font-bold header-title-neon">DATABASE CONTROLS</h2>
                </div>
                <div class="flex items-center space-x-4 text-xs md:text-sm">
                    <span class="flex items-center space-x-1">
                        <span class="w-2 h-2 rounded-full bg-green-500 shadow-lg shadow-green-500/50"></span>
                        <span class="cyberpunk-font">SYSTEM ONLINE</span>
                    </span>
                    <span class="flex items-center space-x-1">
                        <span class="w-2 h-2 rounded-full bg-blue-500 shadow-lg shadow-blue-500/50"></span>
                        <span class="cyberpunk-font">DATABASE SYNCHRONIZED</span>
                    </span>
                </div>
            </div>

            <div class="mt-6 flex flex-col md:flex-row items-center space-y-4 md:space-y-0 md:space-x-4">
                <div class="flex flex-wrap gap-2 w-full">
                    <!-- Filter Buttons -->
                    <button id="filter-all" class="filter-btn px-4 py-2 rounded-lg flex-1 active">ALL TYPES</button>
                    <button id="filter-movie" class="filter-btn px-4 py-2 rounded-lg flex-1">MOVIES</button>
                    <button id="filter-series" class="filter-btn px-4 py-2 rounded-lg flex-1">SERIES</button>
                    <button id="filter-animated" class="filter-btn px-4 py-2 rounded-lg flex-1">ANIMATED</button>
                </div>
                <!-- Genre Dropdown -->
                <select id="genre-filter" class="filter-btn px-4 py-2 rounded-lg w-full md:w-auto text-sm border-2 focus:outline-none focus:ring-2 focus:ring-lime-400">
                    <option value="All">All Genres</option>
                    <option value="ACTION">ACTION</option>
                    <option value="ADVENTURE">ADVENTURE</option>
                    <option value="ANIMATION">ANIMATION</option>
                    <option value="COMEDY">COMEDY</option>
                    <option value="CRIME">CRIME</option>
                    <option value="DRAMA">DRAMA</option>
                    <option value="FANTASY">FANTASY</option>
                    <option value="SCI-FI">SCI-FI</option>
                    <option value="THRILLER">THRILLER</option>
                </select>
            </div>
            
            <div class="mt-4 flex flex-wrap justify-between items-center text-xs text-gray-400 gap-4">
                <div class="flex flex-wrap items-center gap-2">
                    <!-- Sorting Buttons -->
                    <button id="sort-releaseDate" class="sort-btn px-3 py-1 rounded-lg active">
                        DATE <span id="sort-releaseDate-icon">▼</span>
                    </button>
                    <button id="sort-rating" class="sort-btn px-3 py-1 rounded-lg">
                        RATING <span id="sort-rating-icon"></span>
                    </button>
                    <button id="sort-revenue" class="sort-btn px-3 py-1 rounded-lg">
                        BOX OFFICE <span id="sort-revenue-icon"></span>
                    </button>
                    <button id="sort-budget" class="sort-btn px-3 py-1 rounded-lg">
                        BUDGET <span id="sort-budget-icon"></span>
                    </button>
                    <button id="sort-inflated" class="sort-btn px-3 py-1 rounded-lg">
                        INFLATED BO <span id="sort-inflated-icon"></span>
                    </button>
                    <button id="sort-inflatedBudget" class="sort-btn px-3 py-1 rounded-lg">
                        INFLATED BDG <span id="sort-inflatedBudget-icon"></span>
                    </button>
                </div>
            </div>
        </section>

        <!-- Database Entries Section -->
        <section class="mb-8">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-2xl font-bold text-lime-400 text-shadow">DATABASE ENTRIES</h3>
                <span class="flex items-center space-x-2 text-sm text-green-500">
                    <span class="w-2 h-2 rounded-full bg-green-500 animate-pulse"></span>
                    <span>LIVE DATA</span>
                </span>
            </div>
            <p id="record-count" class="text-sm text-gray-400 mb-6"></p>
            <div id="movie-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
                <!-- Movie cards will be dynamically inserted here by JavaScript -->
            </div>
            
            <!-- Pagination -->
            <div id="pagination-controls" class="flex justify-between items-center mt-8">
                <!-- Pagination controls will be dynamically inserted here by JavaScript -->
            </div>
        </section>

        <!-- Data Insights Section -->
        <section class="my-16">
            <h3 class="text-2xl font-bold text-lime-400 mb-6">Comprehensive data insights from the AVP cinematic universe</h3>
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
                <div class="p-6 rounded-lg border-2 border-indigo-500 shadow-lg shadow-indigo-500/50">
                    <h4 class="text-sm text-lime-400">Total Films</h4>
                    <p id="total-films" class="text-4xl font-bold text-white">0</p>
                    <p class="text-xs text-gray-400">Movies, Series & Animated</p>
                </div>
                <div class="p-6 rounded-lg border-2 border-indigo-500 shadow-lg shadow-indigo-500/50">
                    <h4 class="text-sm text-lime-400">Total Budget</h4>
                    <p id="total-budget" class="text-4xl font-bold text-white">$0B</p>
                    <p class="text-xs text-gray-400">Combined production costs</p>
                </div>
                <div class="p-6 rounded-lg border-2 border-indigo-500 shadow-lg shadow-indigo-500/50">
                    <h4 class="text-sm text-lime-400">Box Office</h4>
                    <p id="total-revenue" class="text-4xl font-bold text-white">$0B</p>
                    <p class="text-xs text-gray-400">Worldwide earnings</p>
                </div>
                <div class="p-6 rounded-lg border-2 border-indigo-500 shadow-lg shadow-indigo-500/50">
                    <h4 class="text-sm text-lime-400">Inflated Box Office</h4>
                    <p id="total-inflated-revenue" class="text-4xl font-bold text-white">$0B</p>
                    <p class="text-xs text-gray-400">2025 adjusted earnings</p>
                </div>
            </div>
        </section>
    </main>
    <!-- Add this section just before the footer in your HTML -->
<section class="container mx-auto px-4 md:px-8 my-12">
    <div class="glass-matrix p-6 rounded-lg">
        <h3 class="text-2xl font-bold text-lime-400 mb-6 cyberpunk-font">ALIEN & PREDATOR TIMELINE</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="space-y-4">
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-indigo-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">1</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Prey (1719)</h4>
                        <p class="text-gray-400 text-sm">The earliest known Predator encounter on Earth</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-indigo-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">2</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Predator (1987)</h4>
                        <p class="text-gray-400 text-sm">First documented modern Predator encounter</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-indigo-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">3</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Predator 2 (1997)</h4>
                        <p class="text-gray-400 text-sm">Predator activity in Los Angeles</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-indigo-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">4</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">AVP: Alien vs. Predator (2004)</h4>
                        <p class="text-gray-400 text-sm">First recorded interaction between species</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-indigo-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">5</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">AVPR: Alien vs. Predator - Requiem (2004)</h4>
                        <p class="text-gray-400 text-sm">Containment breach in Colorado</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-indigo-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">6</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Predators (~2010-2020)</h4>
                        <p class="text-gray-400 text-sm">Speculative hunting preserve incidents</p>
                    </div>
                </div>
            </div>
            <div class="space-y-4">
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">7</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">The Predator (2018)</h4>
                        <p class="text-gray-400 text-sm">Genetic experimentation by Predators</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">8</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Prometheus (2093)</h4>
                        <p class="text-gray-400 text-sm">Discovery of Engineer civilization</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">9</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Alien: Covenant (2104)</h4>
                        <p class="text-gray-400 text-sm">First direct Xenomorph creation</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">10</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Alien: Earth (~2090s-2122)</h4>
                        <p class="text-gray-400 text-sm">Speculative, likely pre-Alien events</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">11</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Alien (2122)</h4>
                        <p class="text-gray-400 text-sm">First documented Xenomorph encounter</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">12</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Alien: Romulus (2142)</h4>
                        <p class="text-gray-400 text-sm">Space station Xenomorph outbreak</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">13</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Aliens 2 (2179)</h4>
                        <p class="text-gray-400 text-sm">Space station Xenomorph outbreak</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">14</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Alien: 3 (2179-2180)</h4>
                        <p class="text-gray-400 text-sm">Space station Xenomorph outbreak</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">15</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Alien:4 Resurrection (2379)</h4>
                        <p class="text-gray-400 text-sm">Space station Xenomorph outbreak</p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">16</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Predators:killer of killers (2020)</h4>
                        <p class="text-gray-400 text-sm">on earth </p>
                    </div>
                </div>
                <div class="flex items-start">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-lime-500 flex items-center justify-center mr-3 mt-1">
                        <span class="text-xs font-bold">17</span>
                    </div>
                    <div>
                        <h4 class="text-lg font-bold text-white">Predator Badlands (2380)</h4>
                        <p class="text-gray-400 text-sm">non earth survival</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

    <!-- Corrected Footer -->
    <footer class="text-gray-400 py-12 px-4 md:px-8 footer-bg">
        <div class="container mx-auto grid grid-cols-1 md:grid-cols-3 gap-8 relative z-10">
            <!-- Left section with logo, description, and status -->
            <div class="space-y-4">
                <div class="flex items-center space-x-2">
                    <h4 class="text-2xl font-bold header-title-neon">AVP NEXUS</h4>
                </div>
                <p class="text-sm cyberpunk-font">
                    Advanced cyberpunk database matrix containing comprehensive Alien VS Predator cinematic universe data. Real-time analytics, inflation calculations, and quantum-sorted results for the digital age.
                </p>
                <div class="flex items-center space-x-2 text-sm">
                    <span class="text-lime-400 font-bold pixel-font">SYSTEM STATUS:</span>
                    <span class="w-2 h-2 rounded-full bg-green-500 shadow-lg shadow-green-500/50 animate-pulse"></span>
                    <span class="text-green-500 pixel-font">ONLINE</span>
                </div>
                <div class="flex space-x-4">
                    <a href="#" class="text-gray-400 hover:text-lime-400 transition-colors duration-200">
                        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24"><path d="M12 2C6.477 2 2 6.477 2 12c0 4.237 2.898 7.824 6.828 9.174-.597-.132-1.077-.698-1.077-1.34V15.4c-2.87.625-3.473-1.38-3.473-1.38-.465-1.185-1.13-1.503-1.13-1.503-.925-.63.07-.618.07-.618 1.02.072 1.558 1.05 1.558 1.05.908 1.555 2.385 1.107 2.968.847.092-.66.355-1.107.646-1.36-2.26-.25-4.63-1.13-4.63-5.015 0-1.108.39-2.01.996-2.715-.1-.252-.43-1.28.095-2.67 0 0 .81-.272 2.64 1.037a9.2 9.2 0 012.3-.314 9.2 9.2 0 012.3.314c1.83-1.309 2.64-1.037 2.64-1.037.525 1.39.195 2.418.095 2.67.607.705.996 1.607.996 2.715 0 3.896-2.37 4.76-4.63 5.015.365.31.69.91.69 1.835v2.24c0 .642-.48 1.208-1.077 1.34C19.102 19.824 22 16.237 22 12c0-5.523-4.477-10-10-10z"></path></svg>
                    </a>
                    <a href="#" class="text-gray-400 hover:text-indigo-400 transition-colors duration-200">
                        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24"><path d="M2.002 9.718a2.5 2.5 0 012.5-2.5h15a2.5 2.5 0 012.5 2.5v4.564a2.5 2.5 0 01-2.5 2.5h-15a2.5 2.5 0 01-2.5-2.5V9.718zM6.5 12a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm11 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path></svg>
                    </a>
                    <a href="#" class="text-gray-400 hover:text-lime-400 transition-colors duration-200">
                        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm3.308 12.5h-2.115V19H11.2V14.5H9.692V12h1.508V10.22c0-1.523.824-2.222 2.42-2.222.65 0 1.25.13 1.8-.145V8.5h-1.06c-.636 0-1.01.29-1.01.996V12h2.24l-.32 2.5z"></path></svg>
                    </a>
                </div>
            </div>

            <!-- Middle section for Quick Access and Categories -->
            <div class="grid grid-cols-2 gap-8">
                <div>
                    <h4 class="text-lg font-bold text-lime-400 mb-4 cyberpunk-font">QUICK ACCESS</h4>
                    <ul class="space-y-2 text-sm pixel-font">
                        <li><a href="#" class="hover:text-indigo-400 transition-colors duration-200">ALL MOVIES</a></li>
                        <li><a href="#" class="hover:text-indigo-400 transition-colors duration-200">SERIES</a></li>
                        <li><a href="#" class="hover:text-indigo-400 transition-colors duration-200">ANIMATED</a></li>
                        <li><a href="#" class="hover:text-indigo-400 transition-colors duration-200">TOP RATED</a></li>
                        <li><a href="#" class="hover:text-indigo-400 transition-colors duration-200">BOX OFFICE</a></li>
                    </ul>
                </div>
                <div>
                    <h4 class="text-lg font-bold text-indigo-400 mb-4 cyberpunk-font">CATEGORIES</h4>
                    <ul class="space-y-2 text-sm pixel-font">
                        <li><a href="#" class="hover:text-lime-400 transition-colors duration-200">ACTION</a></li>
                        <li><a href="#" class="hover:text-lime-400 transition-colors duration-200">ADVENTURE</a></li>
                        <li><a href="#" class="hover:text-lime-400 transition-colors duration-200">SCI-FI</a></li>
                        <li><a href="#" class="hover:text-lime-400 transition-colors duration-200">FANTASY</a></li>
                        <li><a href="#" class="hover:text-lime-400 transition-colors duration-200">CRIME</a></li>
                        <li><a href="#" class="hover:text-lime-400 transition-colors duration-200">THRILLER</a></li>
                    </ul>
                </div>
            </div>

            <!-- Right section with powered by and copyright -->
            <div class="space-y-4 text-right">
                <p class="text-sm pixel-font">POWERED BY <span class="text-indigo-400">QUANTUM ALGORITHMS</span> • <span class="text-green-400">REALTIME SYNC</span></p>
                <p class="text-xs text-gray-500 cyberpunk-font">QUANTUM-ENCRYPTED DATA MATRIX // CYBERPUNK DATABASE PROTOCOL v2.1.47</p>
                <p class="text-xs text-gray-500 cyberpunk-font">© 2025 DC Nexus Database v2.1.47</p>
                <p class="text-xs text-gray-500">All AVP characters and content are property of DC Entertainment and Warner Bros. This is a fan-made cyberpunk tribute database.</p>
            </div>
        </div>
    </footer>
        
    <!-- Modal for movie trailer -->
    <div id="trailer-modal" class="modal">
    <div class="modal-content rounded-lg p-4 relative">  <!-- Changed p-8 to p-4 -->
        <span class="close-btn absolute top-2 right-4 text-3xl" onclick="closeModal()">&times;</span>
        <h3 id="modal-title" class="text-2xl md:text-3xl font-bold header-title-neon mb-2 md:mb-4"></h3>
        <div id="modal-body" class="video-container mx-auto">
            <!-- Trailer iframe will go here -->
        </div>
    </div>
</div>
    <script>
        // --- DATA SECTION ---

        // NOTE: You can add new movies to this array. The inflation-adjusted
        // values and the totals on the site will update automatically.
        // Budget and revenue are in millions of USD.
        const mockMovies =[
  {
    "id": 256,
    "title": "Alien",
    "poster": "https://posters.movieposterdb.com/08_08/1979/78748/l_78748_216d4f2b.jpg",
    "releaseDate": "1979-05-25",
    "rating": 8.5,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Horror"
    ],
    "budget": 11,
    "revenue": 104.9,
    "trailerUrl": "https://www.youtube.com/watch?v=SvO5w6XJ_S8"
  },
  {
    "id": 257,
    "title": "Aliens",
    "poster": "https://posters.movieposterdb.com/14_10/1986/90605/l_90605_8d024a57.jpg",
    "releaseDate": "1986-07-18",
    "rating": 8.4,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Action"
    ],
    "budget": 18,
    "revenue": 131.1,
    "trailerUrl": "https://www.youtube.com/watch?v=XKSAmLwJ6I"
  },
  {
    "id": 258,
    "title": "Predator",
    "poster": "https://encrypted-tbn0.gstatic.com/licensed-image?q=tbn:ANd9GcTD-j9zB0hLfP1u0z0PqesrUkTVLnV0Pu5EeXyt-QmGgNBMvHVf-c6m6iNbCus0RjmJiT6crD3p_2oULDabQPN9xo-nAqm5V4c6xQVC8RFXBz_I6vM",
    "releaseDate": "1987-06-12",
    "rating": 7.8,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Action"
    ],
    "budget": 15,
    "revenue": 98.3,
    "trailerUrl": "https://www.youtube.com/watch?v=Yw9-1WfR1o"
  },
  {
    "id": 259,
    "title": "Predator 2",
    "poster": "https://encrypted-tbn0.gstatic.com/licensed-image?q=tbn:ANd9GcRo2viuKnf9sJmdm0l13eTvjIiANARtCoOU6Hyr1ua5RgCCVmdwNMGIUBM9Oa4oYR74u8ghnpR-KM_764V-XvhIvQc_hqRGwoavKEMC25d5mUX4nuY",
    "releaseDate": "1990-11-21",
    "rating": 6.3,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Action"
    ],
    "budget": 35,
    "revenue": 57,
    "trailerUrl": "https://www.youtube.com/watch?v=hJ3K_7H7f-h"
  },
  {
    "id": 260,
    "title": "Alien 3",
    "poster": "https://encrypted-tbn1.gstatic.com/licensed-image?q=tbn:ANd9GcSelzxBZ-r15whvaIOz_7N5pHiyh3avQwPkYTavmZppujrA4kST81E74PB3LLMbtdgj1P31YwP1njWWNxBB4wHhjO0waBHOGIa8je1sxt7rskW2iG0",
    "releaseDate": "1992-05-22",
    "rating": 6.4,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Horror"
    ],
    "budget": 50,
    "revenue": 159.8,
    "trailerUrl": "https://www.youtube.com/watch?v=J3A5W2pX5s"
  },
  {
    "id": 261,
    "title": "Alien: Resurrection",
    "poster": "https://posters.movieposterdb.com/11_05/1997/118583/l_118583_dba499b8.jpg",
    "releaseDate": "1997-11-26",
    "rating": 6.2,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Horror"
    ],
    "budget": 75,
    "revenue": 161.4,
    "trailerUrl": "https://www.youtube.com/watch?v=yYJ4h4q8e2s"
  },
  {
    "id": 262,
    "title": "AVP: Alien vs. Predator",
    "poster": "https://posters.movieposterdb.com/04_12/2004/0370263/l_1189_0370263_42145a85.jpg",
    "releaseDate": "2004-08-13",
    "rating": 5.6,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Action"
    ],
    "budget": 60,
    "revenue": 172,
    "trailerUrl": "https://www.youtube.com/watch?v=W-LhYtG_Kj"
  },
  {
    "id": 263,
    "title": "AVPR: Alien vs Predator - Requiem",
    "poster": "https://posters.movieposterdb.com/08_05/2007/758730/l_758730_d9bf094a.jpg",
    "releaseDate": "2007-12-25",
    "rating": 4.6,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Action"
    ],
    "budget": 40,
    "revenue": 128,
    "trailerUrl": "https://www.youtube.com/watch?v=sO-u_r5W4d"
  },
  {
    "id": 264,
    "title": "Predators",
    "poster": "https://posters.movieposterdb.com/10_03/2010/1424381/l_1424381_a42e91a0.jpg",
    "releaseDate": "2010-07-09",
    "rating": 6.4,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Action"
    ],
    "budget": 40,
    "revenue": 127,
    "trailerUrl": "https://www.youtube.com/watch?v=sI9f-f9W_S"
  },
  {
    "id": 265,
    "title": "Prometheus",
    "poster": "https://posters.movieposterdb.com/12_02/2012/1446714/l_1446714_685e8757.jpg",
    "releaseDate": "2012-06-08",
    "rating": 7.0,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Horror"
    ],
    "budget": 130,
    "revenue": 403,
    "trailerUrl": "https://www.youtube.com/watch?v=sXj5-s0Q2s"
  },
  {
    "id": 266,
    "title": "Alien: Covenant",
    "poster": "https://posters.movieposterdb.com/20_12/2017/2316204/l_2316204_49f52711.jpg",
    "releaseDate": "2017-05-19",
    "rating": 6.4,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Horror"
    ],
    "budget": 97,
    "revenue": 240,
    "trailerUrl": "https://www.youtube.com/watch?v=vV1i4wN-j-c"
  },
  {
    "id": 267,
    "title": "The Predator",
    "poster": "https://posters.movieposterdb.com/20_01/2018/3829266/l_3829266_98601195.jpg",
    "releaseDate": "2018-09-14",
    "rating": 5.6,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Action"
    ],
    "budget": 88,
    "revenue": 160,
    "trailerUrl": "https://www.youtube.com/watch?v=vL-2L-1K1-4"
  },
  {
    "id": 268,
    "title": "Prey",
    "poster": "https://encrypted-tbn1.gstatic.com/licensed-image?q=tbn:ANd9GcRhdIv0kKdSsgWnpOzK5I8m0MoIdTu7RCAJ2c-ePBNEJS78X19iAdUgArNH-JIJI6aJpcOxGZLPZczOr80nmHuRfxJrniCjrhx9RehKA6VK2O6_S0E",
    "releaseDate": "2022-08-05",
    "rating": 7.1,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Action",
      "Thriller"
    ],
    "budget": 65,
    "revenue": null,
    "trailerUrl": "https://www.youtube.com/watch?v=vL-2L-1K1-5"
  },
  {
    "id": 269,
    "title": "Alien: Romulus",
    "poster": "https://posters.movieposterdb.com/24_07/2024/18412256/l_alien-romulus-movie-poster_b36de304.jpg",
    "releaseDate": "2024-08-16",
    "rating": 7.1,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Horror"
    ],
    "budget": 80,
    "revenue": 350,
    "trailerUrl": "https://www.youtube.com/watch?v=vL-2L-1K1-6"
  },
  {
    "id": 270,
    "title": "Alien: Earth",
    "poster": "https://posters.movieposterdb.com/25_06/2025/13623632/l_alien-earth-movie-poster_2c5bcd3f.jpg",
    "releaseDate": "2025-08-13",
    "rating": 9,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Horror"
    ],
    "budget": 70,
    "revenue": null,
    "trailerUrl": null
  },
  {
    "id": 271,
    "title": "Predator: Killer of Killers",
    "poster": "https://posters.movieposterdb.com/25_04/2025/36463894/l_predator-killer-of-killers-movie-poster_05db4d23.jpg",
    "releaseDate": "2025-06-06",
    "rating": 7.5,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Action"
    ],
    "budget": 15,
    "revenue": null,
    "trailerUrl": null
  },
  {
    "id": 272,
    "title": "Predator: Badlands",
    "poster": "https://posters.movieposterdb.com/25_04/2025/31227572/l_predator-badlands-movie-poster_ed43ebb8.jpg",
    "releaseDate": "2025-11-07",
    "rating": null,
    "type": "Movie",
    "genres": [
      "Sci-Fi",
      "Action"
    ],
    "budget": null,
    "revenue": null,
    "trailerUrl": null
  }
];
        
        // Consumer Price Index (CPI) data for the US. This is used for inflation calculations.
        // Source: US Bureau of Labor Statistics. Values are annual averages.
        const cpiData = {
            1920: 17.1, 1921: 15.2, 1922: 14.3, 1923: 14.5, 1924: 14.5, 1925: 14.9, 1926: 15.0, 1927: 14.7, 1928: 14.6, 1929: 14.6,
            1930: 14.2, 1931: 13.0, 1932: 11.7, 1933: 11.1, 1934: 11.4, 1935: 11.7, 1936: 11.8, 1937: 12.2, 1938: 12.0, 1939: 11.8,
            1940: 11.9, 1941: 12.5, 1942: 13.9, 1943: 14.7, 1944: 15.0, 1945: 15.3, 1946: 16.6, 1947: 19.0, 1948: 20.5, 1949: 20.3,
            1950: 20.5, 1951: 22.1, 1952: 22.6, 1953: 22.8, 1954: 22.9, 1955: 22.8, 1956: 23.2, 1957: 24.0, 1958: 24.6, 1959: 24.8,
            1960: 25.2, 1961: 25.5, 1962: 25.8, 1963: 26.1, 1964: 26.4, 1965: 26.8, 1966: 27.6, 1967: 28.4, 1968: 29.6, 1969: 31.3,
            1970: 33.0, 1971: 34.4, 1972: 35.5, 1973: 37.7, 1974: 41.9, 1975: 45.7, 1976: 48.4, 1977: 51.5, 1978: 55.5, 1979: 61.8,
            1980: 70.1, 1981: 77.3, 1982: 82.0, 1983: 84.6, 1984: 88.3, 1985: 91.5, 1986: 93.2, 1987: 96.6, 1988: 100.6, 1989: 105.4,
            1990: 111.0, 1991: 115.7, 1992: 119.2, 1993: 122.7, 1994: 125.8, 1995: 129.4, 1996: 133.2, 1997: 136.3, 1998: 138.4, 1999: 141.4,
            2000: 145.8, 2001: 149.9, 2002: 152.3, 2003: 155.7, 2004: 159.9, 2005: 165.4, 2006: 170.8, 2007: 175.7, 2008: 182.4, 2009: 182.0,
            2010: 185.0, 2011: 190.7, 2012: 194.7, 2013: 197.5, 2014: 200.8, 2015: 201.1, 2016: 203.6, 2017: 208.0, 2018: 213.1, 2019: 217.0,
            2020: 219.3, 2021: 230.1, 2022: 247.8, 2023: 258.9, 2024: 269.2, 2025: 280.0 // Projected
        };

        // --- INFLATION CALCULATION ---
        const targetInflationYear = 2025;

        /**
         * Calculates the inflated value of an amount from a given year to a target year.
         * @param {number} amount - The monetary amount to inflate.
         * @param {string} dateString - The date of the original amount (e.g., '2016-03-25').
         * @param {number} targetYear - The year to inflate the amount to.
         * @returns {number} The inflated monetary amount.
         */
        function calculateInflation(amount, dateString, targetYear = targetInflationYear) {
            const fromYear = new Date(dateString).getFullYear();
            const fromCPI = cpiData[fromYear];
            const toCPI = cpiData[targetYear];

            if (!fromCPI || !toCPI || fromCPI === 0) {
                return amount; // Return original amount if CPI data is missing or zero
            }
            
            return (amount * (toCPI / fromCPI));
        }

        // --- GLOBAL STATE & DOM ELEMENTS ---
        let currentPage = 1;
        let moviesPerPage = 12;
        let filterType = 'All';
        let filterGenre = 'All';
        let sortKey = 'releaseDate';
        let sortOrder = 'desc';

        const movieGrid = document.getElementById('movie-grid');
        const paginationControls = document.getElementById('pagination-controls');
        const recordCount = document.getElementById('record-count');
        const filterButtons = document.querySelectorAll('.filter-btn');
        const genreFilterSelect = document.getElementById('genre-filter');
        const sortButtons = document.querySelectorAll('.sort-btn');
        const trailerModal = document.getElementById('trailer-modal');
        const modalTitle = document.getElementById('modal-title');
        const modalBody = document.getElementById('modal-body');

        // --- CORE LOGIC ---

        /**
         * Sorts an array of movie objects based on a given key and order.
         * Handles calculated fields like inflated budget and revenue.
         */
        const sortMovies = (movies, key, order) => {
    if (!key) return movies;
    
    return [...movies].sort((a, b) => {
        let valA, valB;

        // Handle null/undefined values (including dates)
        const getValue = (movie, key) => {
            switch (key) {
                case 'releaseDate':
                    // Explicit null check for dates
                    if (!movie.releaseDate || isNaN(new Date(movie.releaseDate).getTime())) {
                        return null;
                    }
                    return new Date(movie.releaseDate).getTime();
                case 'inflated':
                    return movie.revenue ? calculateInflation(movie.revenue, movie.releaseDate) : null;
                case 'inflatedBudget':
                    return movie.budget ? calculateInflation(movie.budget, movie.releaseDate) : null;
                default:
                    return movie[key] !== null && movie[key] !== undefined ? movie[key] : null;
            }
        };

        valA = getValue(a, key);
        valB = getValue(b, key);

        // Null handling (pushes nulls to end)
        if (valA === null && valB === null) return 0;
        if (valA === null) return 1;
        if (valB === null) return -1;

        // Normal comparison
        if (valA < valB) return order === 'asc' ? -1 : 1;
        if (valA > valB) return order === 'asc' ? 1 : -1;
        return 0;
    });
};
        
        const getTypeInitial = (type) => (type.startsWith('A') ? 'A' : type.startsWith('S') ? 'S' : 'M');
        const getTypeStyle = (type) => (type === 'Movie' ? 'bg-yellow-500' : type === 'Series' ? 'bg-indigo-500' : 'bg-lime-500');

        /**
         * Filters, sorts, paginates, and renders the movie cards to the DOM.
         */
        const renderMovies = () => {
            const filteredMovies = mockMovies.filter(movie => 
                (filterType === 'All' || movie.type === filterType) &&
                (filterGenre === 'All' || movie.genres.includes(filterGenre))
            );

            const sortedMovies = sortMovies(filteredMovies, sortKey, sortOrder);

            const totalPages = Math.ceil(sortedMovies.length / moviesPerPage);
            const indexOfLastMovie = currentPage * moviesPerPage;
            const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;
            const currentMovies = sortedMovies.slice(indexOfFirstMovie, indexOfLastMovie);

            if (currentMovies.length === 0 && sortedMovies.length > 0) {
                currentPage = 1;
                renderMovies();
                return;
            }

            recordCount.textContent = `DISPLAYING ${currentMovies.length} / ${sortedMovies.length} RECORDS`;
            movieGrid.innerHTML = '';

            currentMovies.forEach(movie => {
                const inflatedBudget = calculateInflation(movie.budget, movie.releaseDate).toFixed(0);
                const inflatedRevenue = calculateInflation(movie.revenue, movie.releaseDate).toFixed(0);

                const movieCardHtml = `
                    <div class="card-container relative overflow-hidden rounded-lg">
                        <img src="${movie.poster}" alt="${movie.title} poster" class="w-full h-full object-cover" onerror="this.onerror=null;this.src='https://placehold.co/250x375/0d0d19/c0c0c0?text=IMG+ERR';" />
                        <div class="card-overlay absolute top-0 left-0 w-full h-full p-4 flex flex-col justify-end text-white">
                            <div class="absolute top-4 left-4 flex items-center space-x-2">
                                <span class="w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-black ${getTypeStyle(movie.type)}">
                                    ${getTypeInitial(movie.type)}
                                </span>
                                <span class="text-sm font-bold text-white pixel-font">${movie.type.toUpperCase()}</span>
                            </div>
                            <div class="absolute top-4 right-4 flex items-center space-x-1">
                                <span class="text-yellow-400">★</span>
                                <span class="card-rating p-1 rounded-full text-lg font-bold bg-black/70 backdrop-blur-sm px-2 pixel-font">${movie.rating}</span>
                            </div>
                            <h4 class="text-2xl font-bold mb-2 card-title-pixel">${movie.title}</h4>
                            <p class="text-xs text-gray-400 mb-2 card-date-pixel">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 inline-block mr-1 text-lime-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-4 12v4m0 0l-2-2m2 2l2-2M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                                ${new Date(movie.releaseDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}
                            </p>
                            <div class="flex flex-wrap space-x-2 my-2">
                                ${movie.genres.map(genre => `<span class="card-tag px-2 py-1 rounded-full text-xs pixel-font bg-indigo-500/50 backdrop-blur-sm">${genre}</span>`).join('')}
                            </div>
                            <div class="grid grid-cols-2 gap-2 mt-4">
                                <div class="data-box rounded-lg">
                                    <span class="data-box-label">BUDGET:</span>
                                    <span class="data-box-value data-box-value-white">$${movie.budget}M</span>
                                </div>
                                <div class="data-box revenue-box rounded-lg">
                                    <span class="data-box-label">REVENUE:</span>
                                    <span class="data-box-value data-box-value-white">$${movie.revenue}M</span>
                                </div>
                                <div class="data-box data-box-small rounded-lg">
                                    <span class="data-box-label">INFLATED BDG:</span>
                                    <span class="data-box-value data-box-value-white">$${inflatedBudget}M</span>
                                </div>
                                <div class="data-box revenue-box data-box-small rounded-lg">
                                    <span class="data-box-label">INFLATED BO:</span>
                                    <span class="data-box-value data-box-value-white">$${inflatedRevenue}M</span>
                                </div>
                            </div>
                            <div class="flex justify-between items-center mt-2 pt-2 border-t border-gray-700 text-xs text-gray-500 cyberpunk-font">
                                <div class="flex items-center space-x-1">
                                    <span class="w-2 h-2 rounded-full bg-green-500"></span>
                                    <span class="text-green-500">DATA VERIFIED</span>
                                </div>
                                <span>ID: ${movie.id}</span>
                            </div>
                            <button class="trailer-btn px-4 py-2 mt-4 rounded-lg w-full" onclick="showTrailer('${movie.trailerUrl}', '${movie.title}')">See Trailer 🎬</button>
                        </div>
                    </div>
                `;
                movieGrid.insertAdjacentHTML('beforeend', movieCardHtml);
            });

            renderPagination(totalPages);
        };

        /**
         * Calculates and updates the main statistics in the "Data Insights" section.
         */
        function updateDataInsights() {
            const totalFilms = mockMovies.length;
            const totalBudget = mockMovies.reduce((sum, movie) => sum + movie.budget, 0);
            const totalRevenue = mockMovies.reduce((sum, movie) => sum + movie.revenue, 0);
            const totalInflatedRevenue = mockMovies.reduce((sum, movie) => {
                return sum + calculateInflation(movie.revenue, movie.releaseDate);
            }, 0);

            document.getElementById('total-films').textContent = totalFilms;
            document.getElementById('total-budget').textContent = `$${(totalBudget / 1000).toFixed(1)}B`;
            document.getElementById('total-revenue').textContent = `$${(totalRevenue / 1000).toFixed(1)}B`;
            document.getElementById('total-inflated-revenue').textContent = `$${(totalInflatedRevenue / 1000).toFixed(1)}B`;
        }
        
        /**
         * Renders pagination controls based on the total number of pages.
         */
        const renderPagination = (totalPages) => {
            paginationControls.innerHTML = '';
            if (totalPages <= 1) return;

            const createBtn = (text, page, disabled = false) => 
                `<button class="pagination-nav-btn px-3 py-1 rounded-lg ${disabled ? 'opacity-50 cursor-not-allowed' : ''}" onclick="goToPage(${page})" ${disabled ? 'disabled' : ''}>${text}</button>`;

            const pageBtns = Array.from({ length: totalPages }, (_, i) => 
                `<button class="pagination-btn px-3 py-1 rounded-lg ${currentPage === i + 1 ? 'active' : ''}" onclick="goToPage(${i + 1})">${i + 1}</button>`
            ).join('');

            const paginationHtml = `
                <span class="text-sm">PAGE ${currentPage} / ${totalPages}</span>
                <div class="flex items-center space-x-2">
                    ${createBtn('&lt; PREV', currentPage - 1, currentPage === 1)}
                    ${pageBtns}
                    ${createBtn('NEXT &gt;', currentPage + 1, currentPage === totalPages)}
                </div>
            `;
            paginationControls.insertAdjacentHTML('beforeend', paginationHtml);
        };

        // --- EVENT HANDLERS ---
        const handleFilter = (type) => {
            filterType = type;
            currentPage = 1;
            filterButtons.forEach(btn => btn.classList.remove('active'));
            document.getElementById(`filter-${type.toLowerCase()}`).classList.add('active');
            renderMovies();
        };

        const handleGenreFilter = (event) => {
            filterGenre = event.target.value;
            currentPage = 1;
            renderMovies();
        };

        const handleSort = (key) => {
            sortOrder = (sortKey === key && sortOrder === 'desc') ? 'asc' : 'desc';
            sortKey = key;
            currentPage = 1;
            
            sortButtons.forEach(btn => btn.classList.remove('active'));
            document.getElementById(`sort-${key}`).classList.add('active');

            document.querySelectorAll('[id$="-icon"]').forEach(icon => icon.textContent = '');
            document.getElementById(`sort-${key}-icon`).textContent = sortOrder === 'asc' ? '▲' : '▼';
            
            renderMovies();
        };

        const goToPage = (page) => {
            const filteredMovies = mockMovies.filter(movie => (filterType === 'All' || movie.type === filterType) && (filterGenre === 'All' || movie.genres.includes(filterGenre)));
            const totalPages = Math.ceil(filteredMovies.length / moviesPerPage);
            if (page >= 1 && page <= totalPages) {
                currentPage = page;
                renderMovies();
            }
        };
        
        const showModal = (title, content) => {
            modalTitle.textContent = title;
            modalBody.innerHTML = content;
            trailerModal.style.display = 'flex';
        };

        const closeModal = () => {
            trailerModal.style.display = 'none';
            modalBody.innerHTML = '';
        };

        const showTrailer = (url, title) => {
            const iframeHtml = `<iframe width="100%" height="100%" src="${url.replace('/watch?v=', '/embed/')}" title="${title} Trailer" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`;
            showModal(title, iframeHtml);
        };
        // ===== RAIN EFFECT TOGGLE SYSTEM =====
let rainMode = 0; // 0=off, 1=green rain, 2=matrix
const rainToggle = document.getElementById('rain-toggle');
const rainCanvas = document.getElementById('rain-canvas');
const rainCtx = rainCanvas.getContext('2d');

// Green rain variables
let rainDrops = [];

// Matrix rain variables
const matrixLetters = '甲山ヨ尺卞と凵工回尸丹己句乍呂廾勹片し乙メ亡レ日几冊1234567890#$%^&*<>?!*';
const matrixFontSize = 16;
let matrixColumns, matrixDrops;
let matrixRainInterval;

function initGreenRain() {
    rainCanvas.width = window.innerWidth;
    rainCanvas.height = window.innerHeight;
    const count = Math.floor(rainCanvas.width / (window.innerWidth < 768 ? 1.5 : 0.8));
    rainDrops = Array.from({ length: count }, () => ({
        x: Math.random() * rainCanvas.width,
        y: Math.random() * -rainCanvas.height,
        len: Math.random() * 17 + 10,
        speed: Math.random() * 1.0 + 0.5,
        opacity: Math.random() * 0.4 + 0.2,
        width: Math.random() * 0.9 + 0.5
    }));
}

function drawGreenRain() {
    rainCtx.clearRect(0, 0, rainCanvas.width, rainCanvas.height);
    rainDrops.forEach(drop => {
        rainCtx.strokeStyle = `rgba(163, 230, 53, ${drop.opacity})`;
        rainCtx.lineWidth = drop.width;
        rainCtx.beginPath();
        rainCtx.moveTo(drop.x, drop.y);
        rainCtx.lineTo(drop.x + (drop.speed/5), drop.y + drop.len);
        rainCtx.stroke();
        drop.y += drop.speed;
        if (drop.y > rainCanvas.height) {
            drop.y = -drop.len * 2;
            drop.x = Math.random() * rainCanvas.width;
        }
    });
    if (rainMode === 1) requestAnimationFrame(drawGreenRain);
}

function setupMatrixRain() {
    rainCanvas.width = window.innerWidth;
    rainCanvas.height = window.innerHeight;
    matrixColumns = rainCanvas.width / matrixFontSize;
    matrixDrops = Array(Math.floor(matrixColumns)).fill(1);
}

function drawMatrixRain() {
    rainCtx.fillStyle = 'rgba(0, 0, 0, 0.05)';
    rainCtx.fillRect(0, 0, rainCanvas.width, rainCanvas.height);
    rainCtx.fillStyle = '#0F0';
    rainCtx.font = `${matrixFontSize}px monospace`;
    
    matrixDrops.forEach((y, x) => {
        const text = matrixLetters.charAt(Math.floor(Math.random() * matrixLetters.length));
        rainCtx.fillText(text, x * matrixFontSize, y * matrixFontSize);
        if (y * matrixFontSize > rainCanvas.height && Math.random() > 0.975) {
            matrixDrops[x] = 0;
        }
        matrixDrops[x]++;
    });
}

function toggleRain() {
    // Clear current effect
    rainCtx.clearRect(0, 0, rainCanvas.width, rainCanvas.height);
    if (matrixRainInterval) clearInterval(matrixRainInterval);
    cancelAnimationFrame(drawGreenRain);
    
    // Cycle to next mode
    rainMode = (rainMode + 1) % 3;
    
    // Set up new mode
    switch(rainMode) {
        case 0: // Off
            rainToggle.textContent = "RAIN: OFF";
            rainToggle.classList.remove('matrix-mode');
            break;
        case 1: // Green Rain
            rainToggle.textContent = "RAIN: GREEN";
            rainToggle.classList.remove('matrix-mode');
            initGreenRain();
            drawGreenRain();
            break;
        case 2: // Matrix
            rainToggle.textContent = "RAIN: MATRIX";
            rainToggle.classList.add('matrix-mode');
            setupMatrixRain();
            matrixRainInterval = setInterval(drawMatrixRain, 50);
            break;
    }
}

// Initialize
rainToggle.addEventListener('click', toggleRain);

// Handle window resize
window.addEventListener('resize', () => {
    if (rainMode === 1) initGreenRain();
    if (rainMode === 2) setupMatrixRain();
});
        
        
        // --- INITIALIZATION ---
        document.addEventListener('DOMContentLoaded', () => {
    
            filterButtons.forEach(btn => {
                btn.addEventListener('click', () => {
                    const typeMap = {'ALL TYPES': 'All', 'MOVIES': 'Movie', 'SERIES': 'Series', 'ANIMATED': 'Animated'};
                    handleFilter(typeMap[btn.textContent.trim()]);
                });
            });

            genreFilterSelect.addEventListener('change', handleGenreFilter);

            sortButtons.forEach(btn => {
                const key = btn.id.replace('sort-', '');
                btn.addEventListener('click', () => handleSort(key));
            });

            // Initial render and data calculation
            updateDataInsights();
            renderMovies();
        });
    </script>
</body>
</html>

